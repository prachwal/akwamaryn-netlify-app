name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x, 22.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linter
      run: npm run lint

    - name: Run tests
      run: npm run coverage

    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      with:
        file: ./public/coverage/lcov.info
        fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run Documentation Generation
      run: npm run docs

    - name: Build project
      run: npm run build

    - name: Verify build output
      run: |
        echo "Checking build output..."
        ls -la dist/
        if [ ! -f "dist/index.html" ]; then
          echo "Error: index.html not found in dist/"
          exit 1
        fi
        echo "Verifying documentation was copied by Vite..."
        if [ -d "dist/docs" ]; then
          echo "‚úÖ Documentation found in dist/docs"
        else
          echo "‚ö†Ô∏è Documentation not found in dist/docs"
        fi

    - name: Upload build artifacts
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./dist

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Deployment Success Notification
        if: success()
        run: |
          echo "üöÄ Deployment successful!"
          echo "üìÑ Site URL: ${{ steps.deployment.outputs.page_url }}"
          echo "‚úÖ Build completed at: $(date)"

      - name: Deployment Failure Notification
        if: failure()
        run: |
          echo "‚ùå Deployment failed!"
          echo "üîç Please check the logs above for details"
          echo "‚è∞ Failed at: $(date)"
          exit 1